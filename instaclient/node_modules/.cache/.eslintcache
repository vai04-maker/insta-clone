[{"/Users/vaibhav/personal_projects/insta-client/instac/src/index.js":"1","/Users/vaibhav/personal_projects/insta-client/instac/src/reportWebVitals.js":"2","/Users/vaibhav/personal_projects/insta-client/instac/src/App.js":"3","/Users/vaibhav/personal_projects/insta-client/instac/src/Post.js":"4","/Users/vaibhav/personal_projects/insta-client/instac/src/ImageUpload.js":"5"},{"size":500,"mtime":1647083269503,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1647083269507,"results":"8","hashOfConfig":"7"},{"size":7612,"mtime":1647368854910,"results":"9","hashOfConfig":"7"},{"size":4319,"mtime":1647370679831,"results":"10","hashOfConfig":"7"},{"size":2994,"mtime":1647204325800,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1m48dor",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vaibhav/personal_projects/insta-client/instac/src/index.js",[],[],["30","31"],"/Users/vaibhav/personal_projects/insta-client/instac/src/reportWebVitals.js",[],[],"/Users/vaibhav/personal_projects/insta-client/instac/src/App.js",["32","33","34"],[],"import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Post from './Post'\nimport {Avatar, Button, Modal, makeStyles, Input} from \"@material-ui/core\"\nimport ImageUpload from './ImageUpload'\n\nconst BASE_URL ='http://localhost:8000/'\n\n\nfunction getModalStyle() {\n  const top=50;\n  const left=50;\n\n  return {\n    top: `${top}%`,\n    left: `${top}%`,\n    transform : `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      position: 'absolute',\n      width: 400,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2,4,3)\n    }\n}))\n\n\n\nfunction App() {\n\n  const classes = useStyles();\n\n  const [posts, setPosts] = useState([]);\n  const [openSignIn,setOpenSignIn] =useState(false);\n  const [openSignUp,setOpenSignUp] =useState(false);\n  const [modalStyle,setModalStyle] =useState(getModalStyle);\n  const [username,setUsername] = useState('');\n  const [password,setPassword] = useState('');\n  const [authToken,setAuthToken] = useState(null);\n  const [authTokenType,setAuthTokenType] = useState(null);\n  const [userId, setUserId] = useState('');\n  const [email, setEmail] = useState('');\n\n  useEffect(() => {\n    setAuthToken( window.localStorage.getItem('authToken'));\n    setAuthTokenType(window.localStorage.getItem('authTokenType'));\n    setUsername(window.localStorage.getItem('username'));\n    setUserId(window.localStorage.getItem('userId'));\n  },[])\n\n\n\n  useEffect(() => {\n    authToken \n      ? window.localStorage.setItem('authToken', authToken)\n      : window.localStorage.removeItem('authToken')\n    authTokenType\n      ? window.localStorage.setItem('authTokenType', authTokenType)\n      : window.localStorage.removeItem('authTokenType')\n    username \n      ? window.localStorage.setItem('username', username)\n      : window.localStorage.removeItem('username')\n    userId\n      ? window.localStorage.setItem('username', userId)\n      : window.localStorage.removeItem('userId')\n    \n  },[authToken,authTokenType, userId])\n\n\n\n  useEffect(() => {\n      fetch(BASE_URL + 'post/all')\n        .then(response => {\n            const json = response.json();\n            console.log(json);\n            if(response.ok){\n              return json\n            }\n            throw response\n        })\n        .then(data =>{\n          const result= data.sort((a,b) => {\n            const t_a = a.Timestamp.split(/[-T:]/);\n            const t_b = b.Timestamp.split(/[-T:]/);\n            const d_a = new Date(Date.UTC(t_a[0], t_a[1]-1, t_a[2], t_a[3], t_a[4], t_a[5] ));\n            const d_b = new Date(Date.UTC(t_b[0], t_b[1]-1, t_b[2], t_b[3], t_b[4], t_b[5] ));\n            return d_b- d_a;\n          })\n          return result\n        })\n        .then(data =>{\n            setPosts(data)\n        })\n        .catch(error =>{\n          console.log(error);\n          alert(error)\n        })\n\n  },[])\n\nconst signIn = (event) =>{\n    event?.preventDefault();\n\n    let formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n\n    const requestOptions = {\n      method: 'POST',\n      body : formData\n    }\n\n    fetch(BASE_URL+'login', requestOptions)\n      .then(response => {\n        if (response.ok){\n          return response.json()\n        }\n        throw response\n      })\n      .then(data =>{\n        console.log(data);\n        setAuthToken(data.access_token)\n        setAuthTokenType(data.token_type)\n        setUserId(data.user_id)\n        setUsername(data.username)\n      })\n      .catch(error => {\n        console.log(error);\n        alert(error);\n      })\n\n      setOpenSignIn(false)\n}\n\nconst signUp = (event) => {\n  event?.preventDefault();\n\n  const json_string = JSON.stringify({\n      username: username,\n      email: email,\n      password: password\n  })\n\n  const requestOptions ={\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json'},\n    body: json_string\n  }\n\n  fetch(BASE_URL + 'user/' ,requestOptions)\n    .then(response => {\n      if(response.ok){\n        return response.json();\n      }\n      throw response\n    })\n    .then(data => {\n      //console.log(data);\n      signIn();\n    })\n    .catch(error => {\n      console.log(error);\n      alert(error);\n    })\n\n  setOpenSignUp(false)\n}\n\nconst signOut = (event) => {\n  setAuthToken(null);\n  setAuthTokenType(null);\n  setUserId('');\n  setUsername('');\n}\n\n  return (\n    <div className='app'>\n\n      <Modal open={openSignIn} onClose= {() => setOpenSignIn(false)}>\n\n        <div style={modalStyle} className={classes.paper}>\n          <form className='app_signin'>\n            <center>\n              <img className=\"app_headerImage\"\n                src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSKDo91NDgtvxVXUsti8VQ17zrdu2RnoaXJyQ&usqp=CAU'\n                alt='Instagram'/>\n            </center>\n            <Input\n              placeholder='username'\n              type='text'\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}/>\n            <Input\n              placeholder='password'\n              type='password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}/>\n            <Button\n              type='submit'\n              onClick={signIn}>Login</Button>\n          </form>\n        </div>\n\n      </Modal>\n\n      <Modal open={openSignUp} onClose= {() => setOpenSignUp(false)}>\n\n        <div style={modalStyle} className={classes.paper}>\n          <form className='app_signin'>\n            <center>\n              <img className=\"app_headerImage\"\n                src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSKDo91NDgtvxVXUsti8VQ17zrdu2RnoaXJyQ&usqp=CAU'\n                alt='Instagram'/>\n            </center>\n            <Input\n              placeholder='username'\n              type='text'\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}/>\n            <Input\n              placeholder='password'\n              type='password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}/>\n            <Input\n              placeholder='email'\n              type='text'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}/>\n            <Button\n              type='submit'\n              onClick={signUp}>Sign Up</Button>\n          </form>\n        </div>\n\n\n\n      </Modal>\n\n      <div className=\"app_header\">\n        <img className=\"app_headerImage\"\n          src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSKDo91NDgtvxVXUsti8VQ17zrdu2RnoaXJyQ&usqp=CAU'\n          alt='Instagram'\n        />\n\n\n        {authToken ? (\n          <Button onClick = {signOut}>Logout</Button>\n        ) :\n        (\n        <div>\n          <Button onClick = {() => setOpenSignIn(true)}>Login</Button>\n          <Button onClick = {() => setOpenSignUp(true)}>Sign Up</Button>\n        </div>\n        )\n        }\n      </div>\n\n      <div className=\"app_posts\">\n        {\n          posts.map(post => (\n            <Post\n              post ={post}\n              authToken={authToken}\n              authTokenType={authTokenType}\n              username={username}\n            />\n          ))\n        }\n      </div>  \n\n      {\n        authToken ? (\n          <ImageUpload\n          authToken={authToken}\n          authTokenType={authTokenType}\n          userId={userId}\n          />\n        ) : (\n          <h3>You need to login to Upload</h3>          \n        )\n      }\n      \n\n    </div>\n  );\n}\n\nexport default App;\n",["35","36"],"/Users/vaibhav/personal_projects/insta-client/instac/src/Post.js",["37","38","39","40","41"],[],"/Users/vaibhav/personal_projects/insta-client/instac/src/ImageUpload.js",[],[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":4,"column":9,"nodeType":"48","messageId":"49","endLine":4,"endColumn":15},{"ruleId":"46","severity":1,"message":"50","line":41,"column":21,"nodeType":"48","messageId":"49","endLine":41,"endColumn":34},{"ruleId":"51","severity":1,"message":"52","line":72,"column":5,"nodeType":"53","endLine":72,"endColumn":38,"suggestions":"54"},{"ruleId":"42","replacedBy":"55"},{"ruleId":"44","replacedBy":"56"},{"ruleId":"46","severity":1,"message":"57","line":3,"column":25,"nodeType":"48","messageId":"49","endLine":3,"endColumn":30},{"ruleId":"58","severity":1,"message":"59","line":14,"column":32,"nodeType":"60","messageId":"61","endLine":14,"endColumn":34},{"ruleId":"51","severity":1,"message":"62","line":20,"column":7,"nodeType":"53","endLine":20,"endColumn":9,"suggestions":"63"},{"ruleId":"51","severity":1,"message":"64","line":24,"column":7,"nodeType":"53","endLine":24,"endColumn":9,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":113,"column":13,"nodeType":"68","endLine":116,"endColumn":16},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","'setModalStyle' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.","ArrayExpression",["71"],["69"],["70"],"'Modal' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'post.image_url' and 'post.image_url_type'. Either include them or remove the dependency array. If 'setImageUrl' needs the current value of 'post.image_url', you can also switch to useReducer instead of useState and read 'post.image_url' in the reducer.",["72"],"React Hook useEffect has a missing dependency: 'post.comments'. Either include it or remove the dependency array. If 'setComments' needs the current value of 'post.comments', you can also switch to useReducer instead of useState and read 'post.comments' in the reducer.",["73"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [authToken, authTokenType, userId, username]",{"range":"80","text":"81"},"Update the dependencies array to be: [post.image_url, post.image_url_type]",{"range":"82","text":"83"},"Update the dependencies array to be: [post.comments]",{"range":"84","text":"85"},[2058,2091],"[authToken, authTokenType, userId, username]",[572,574],"[post.image_url, post.image_url_type]",[639,641],"[post.comments]"]